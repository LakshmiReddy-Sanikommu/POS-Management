{"ast":null,"code":"var _jsxFileName = \"/Users/srilakshmireddysanikommu/Desktop/Projects/G/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initAuth = () => {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n      if (token && userData) {\n        try {\n          const parsedUser = JSON.parse(userData);\n          setUser(parsedUser);\n          authService.setAuthToken(token);\n        } catch (error) {\n          console.error('Error parsing user data:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      const {\n        token,\n        ...userData\n      } = response;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      authService.setAuthToken(token);\n      setUser(userData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    authService.removeAuthToken();\n    setUser(null);\n  };\n  const hasRole = role => {\n    var _user$roles;\n    return user === null || user === void 0 ? void 0 : (_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : _user$roles.includes(`ROLE_${role}`);\n  };\n  const hasAnyRole = roles => {\n    return roles.some(role => hasRole(role));\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    hasRole,\n    hasAnyRole,\n    loading,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initAuth","token","localStorage","getItem","userData","parsedUser","JSON","parse","setAuthToken","error","console","removeItem","login","credentials","response","setItem","stringify","logout","removeAuthToken","hasRole","role","_user$roles","roles","includes","hasAnyRole","some","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srilakshmireddysanikommu/Desktop/Projects/G/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = () => {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n      \n      if (token && userData) {\n        try {\n          const parsedUser = JSON.parse(userData);\n          setUser(parsedUser);\n          authService.setAuthToken(token);\n        } catch (error) {\n          console.error('Error parsing user data:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await authService.login(credentials);\n      const { token, ...userData } = response;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      authService.setAuthToken(token);\n      setUser(userData);\n      \n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    authService.removeAuthToken();\n    setUser(null);\n  };\n\n  const hasRole = (role) => {\n    return user?.roles?.includes(`ROLE_${role}`);\n  };\n\n  const hasAnyRole = (roles) => {\n    return roles.some(role => hasRole(role));\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    hasRole,\n    hasAnyRole,\n    loading,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}