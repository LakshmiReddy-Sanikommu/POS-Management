{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nclass AuthService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Add request interceptor to include token\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Add response interceptor to handle errors\n    this.api.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        this.removeAuthToken();\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n  async login(credentials) {\n    try {\n      const response = await this.api.post('/auth/signin', credentials);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed');\n    }\n  }\n  async logout() {\n    try {\n      await this.api.post('/auth/signout');\n    } catch (error) {\n      // Even if logout fails on server, clear local storage\n      console.error('Logout error:', error);\n    } finally {\n      this.removeAuthToken();\n    }\n  }\n  setAuthToken(token) {\n    if (token) {\n      this.api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n  }\n  removeAuthToken() {\n    delete this.api.defaults.headers.common['Authorization'];\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n  getCurrentUser() {\n    const userData = localStorage.getItem('user');\n    return userData ? JSON.parse(userData) : null;\n  }\n\n  // Get the configured axios instance for other services\n  getApiInstance() {\n    return this.api;\n  }\n}\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","AuthService","constructor","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeAuthToken","window","location","href","login","credentials","post","data","_error$response2","_error$response2$data","Error","message","logout","console","setAuthToken","defaults","common","removeItem","getCurrentUser","userData","JSON","parse","getApiInstance","authService"],"sources":["/Users/srilakshmireddysanikommu/Desktop/Projects/G/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nclass AuthService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_URL,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Add request interceptor to include token\n    this.api.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Add response interceptor to handle errors\n    this.api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          this.removeAuthToken();\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  async login(credentials) {\n    try {\n      const response = await this.api.post('/auth/signin', credentials);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Login failed');\n    }\n  }\n\n  async logout() {\n    try {\n      await this.api.post('/auth/signout');\n    } catch (error) {\n      // Even if logout fails on server, clear local storage\n      console.error('Logout error:', error);\n    } finally {\n      this.removeAuthToken();\n    }\n  }\n\n  setAuthToken(token) {\n    if (token) {\n      this.api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n  }\n\n  removeAuthToken() {\n    delete this.api.defaults.headers.common['Authorization'];\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n\n  getCurrentUser() {\n    const userData = localStorage.getItem('user');\n    return userData ? JSON.parse(userData) : null;\n  }\n\n  // Get the configured axios instance for other services\n  getApiInstance() {\n    return this.api;\n  }\n}\n\nconst authService = new AuthService();\nexport default authService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}